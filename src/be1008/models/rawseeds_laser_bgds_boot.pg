--- model rawseeds_laser_bgds_boot
""" Uses rawseeds_synchronized_laser as a source. """
config logdir                              "Directory containing Rawseeds logs."
config outdir   = laser_bgds_boot          "Subdirectory inside logdir where to put files."
config grad_op  = identity                 "Scalar operation after gradient."
config deriv_op = identity                 "Scalar operation after derivative."
config display_fps = 0.1                   "Frames per second for movie."
config rangefinder_fps = 2.5                     "Cap on laser frame rate."

mencoder.file = "${logdir}/out/${outdir}/movie.avi"
odometry.file = "${logdir}/ODOMETRY_XYT.csv.bz2"

import procgraph_rawseeds

|rawseeds_synchronized_laser logdir=$logdir fps=$rangefinder_fps| --> y

#y --> |fps_print|

|odometry:RawseedsOdo| --> |fps_data_limit fps=30| --> odometry --> |pose2commands| --> commands

y --> |derivative| --> |$grad_op | --> y_dot
y --> |gradient1d| --> |$deriv_op| --> gy

y_dot, gy --> |sync| --> |*| --> dygy 

dygy, commands --> |sync| --> |outer| --> Gi

Gi --> |expectation| --> G


y_dot, commands --> |sync| --> |outer| --> |expectation| -> B


    gy, B, G --> |sync| --> |fps_data_limit fps=$display_fps| --> gys, Bs, Gs

    gys --> |plot| --> gy_rgb
    Gs --> |take axis=1 indices=[0]| --> |plot| --> G_x
    Gs --> |take axis=1 indices=[1]| --> |plot| --> G_y
    Gs --> |take axis=1 indices=[2]| --> |plot| --> G_th
    Bs --> |take axis=1 indices=[0]| --> |plot| --> B_x
    Bs --> |take axis=1 indices=[1]| --> |plot| --> B_y
    Bs --> |take axis=1 indices=[2]| --> |plot| --> B_th 
    G_x,G_y,G_th,B_x,B_y,B_th, gy_rgb --> |sync| --> |grid cols=3| --> rgb
    rgb --> |mencoder| 
     
  B  --> |rawseeds_laser_bgds_boot_save w='${outdir}/B'|
  G  --> |rawseeds_laser_bgds_boot_save w='${outdir}/G'|
  
  
# now statistics


y_dot --> |abs|    --> |expectation|  --> |rawseeds_laser_bgds_boot_save w='${outdir}/y_dot_svar'|
y_dot --> |square| --> |expectation|  --> |rawseeds_laser_bgds_boot_save w='${outdir}/y_dot_var'|
y_dot --> |expectation|               --> |rawseeds_laser_bgds_boot_save w='${outdir}/y_dot_mean'|
gy    --> |abs|    --> |expectation|  --> |rawseeds_laser_bgds_boot_save w='${outdir}/gy_svar'|
gy    --> |square| --> |expectation|  --> |rawseeds_laser_bgds_boot_save w='${outdir}/gy_var'|
gy    --> |expectation|               --> |rawseeds_laser_bgds_boot_save w='${outdir}/gy_mean'|
y    --> |expectation|                --> |rawseeds_laser_bgds_boot_save w='${outdir}/y_mean'|
y    --> |variance|                   --> |rawseeds_laser_bgds_boot_save w='${outdir}/y_var'|
y    --> |one_over| --> |expectation| --> |rawseeds_laser_bgds_boot_save w='${outdir}/one_over_y_mean'|
  

---- model rawseeds_laser_bgds_boot_save
""" Saves the input to the given pickle file at a certain interval. """
config w "The file name, without the '.pickle' extension which is added automatically."
config fps = 0.2

|input name=x| --> |fps_data_limit fps=$fps| --> |pickle file='${w}.pickle'|

     
------------ model rawseeds_laser_bgds_boot_all
""" Tries all possible combinations of ops for BGDS bootstrapping.
"""
config logdir "Directory containing Rawseeds logs."
base = "${logdir}/out/laser_bgds_boot"

|rawseeds_laser_bgds_boot logdir=$logdir deriv_op=identity  grad_op=identity  outdir="${base}/GI_DI"|
|rawseeds_laser_bgds_boot logdir=$logdir deriv_op=sign      grad_op=identity  outdir="${base}/GI_DS"|
|rawseeds_laser_bgds_boot logdir=$logdir deriv_op=identity  grad_op=sign      outdir="${base}/GS_DI"|
|rawseeds_laser_bgds_boot logdir=$logdir deriv_op=sign      grad_op=sign      outdir="${base}/GS_DS"|
 
